// Generated by CoffeeScript 1.6.1
(function() {
  var $, $tabs, REMINDER_SEL_OPTIONS, addReminderTemplate, enableRecurrenceEndCtrls, getAddReminderTemplate, getReminderOptions, initRecurrenceTypes, initReminders, onChangeAllDay, onChangeTabContent, onClickReminderAddBtn, onClickReminderRemoveBtn, onLoadedOrganization, onSelectOrganization, onSelectTab, onSubmitForm;

  REMINDER_SEL_OPTIONS = ["1m", "5m", "10m", "15m", "20m", "30m", "45m", "1h", "2h", "3h", "4h", "5h", "6h", "8h", "12h", "1d", "2d", "3d", "1w", "2w", "4w"];

  $ = jQuery;

  $tabs = $("#tabs-recurrence-type");

  addReminderTemplate = null;

  enableRecurrenceEndCtrls = function(value) {
    var $input;
    switch (value) {
      case "until":
        $input = $("#recurrence\\.until-date").enable();
        $("#recurrence\\.cnt").disable();
        break;
      case "count":
        $input = $("#recurrence\\.cnt").enable();
        $("#recurrence\\.until-date").disable();
        break;
      case "none":
        $("#recurrence\\.until-date").disable();
        $("#recurrence\\.cnt").disable();
    }
    return $input;
  };

  getAddReminderTemplate = function() {
    var template;
    template = addReminderTemplate;
    if (!template) {
      template = $("#add-reminder-template").mustache();
      addReminderTemplate = template;
    }
    return template;
  };

  getReminderOptions = function(value) {
    var o, res, u, v, _i, _len;
    res = [];
    for (_i = 0, _len = REMINDER_SEL_OPTIONS.length; _i < _len; _i++) {
      o = REMINDER_SEL_OPTIONS[_i];
      v = parseInt(o, 10);
      switch (o.charAt(o.length - 1)) {
        case "m":
          u = "minute";
          break;
        case "h":
          u = "hour";
          break;
        case "d":
          u = "day";
          break;
        case "w":
          u = "week";
      }
      if (v > 1) {
        u += "s";
      }
      res.push({
        optionValue: o,
        selected: (value === o ? "selected='selected'" : ""),
        unit: $L("calendarEvent.reminder.unit." + u),
        value: v
      });
    }
    return res;
  };

  initRecurrenceTypes = function() {
    var recurType, wd, wds, _i, _len;
    $ = jQuery;
    recurType = Number($("#tabs-recurrence-type input:radio:checked").val());
    if (recurType === 0) {
      $("#recurrence-end").hide();
    } else {
      $("#recurrence-interval-" + recurType).val($("#recurrence-interval").val());
      $("#recurrence-monthDay-" + recurType).val($("#recurrence-monthDay").val());
      $("#recurrence-weekdayOrd-" + recurType).val($("#recurrence-weekdayOrd").val());
      $("#recurrence-month-" + recurType).val($("#recurrence-month").val());
      if (recurType === 30 || recurType === 50 || recurType === 70) {
        wds = $("#recurrence-weekdays").val().split(/,/);
        if (recurType === 30) {
          $("#tabs-recurrence-type-30 input:checkbox").attr("checked", false);
          for (_i = 0, _len = wds.length; _i < _len; _i++) {
            wd = wds[_i];
            $("#recurrence-weekdays-30-" + wd).attr("checked", true);
          }
        } else {
          if (wds.length) {
            $("#recurrence-weekdays-" + recurType).val(wds[0]);
          }
        }
      }
      $("#recurrence-end").show();
    }
    return $tabs.tabs("select", "tabs-recurrence-type-" + recurType);
  };

  initReminders = function() {
    var r, reminders, s, template, val, _i, _len, _ref;
    $ = jQuery;
    reminders = [];
    val = $("#reminders").val();
    if (val) {
      _ref = val.split(/\s/);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        r = _ref[_i];
        reminders.push({
          options: getReminderOptions(r)
        });
      }
    }
    template = getAddReminderTemplate();
    s = template({
      reminders: reminders
    });
    $("#reminder-selectors").html(s).on("click", ".button", onClickReminderRemoveBtn);
    return $("#reminder-add-btn").on("click", onClickReminderAddBtn);
  };

  onChangeAllDay = function() {
    return $("#start-time").add("#end-time").toggleEnable(!this.checked);
  };

  onChangeTabContent = function() {
    $ = jQuery;
    if ($(this).attr("id").match(/^tabs-recurrence-type-(\d+)$/)) {
      return $("#recurrence-type-" + RegExp.$1).trigger("click");
    }
  };

  onClickReminderAddBtn = function() {
    var $s, $sel, $ul, s, template;
    $ = jQuery;
    template = getAddReminderTemplate();
    s = template({
      reminders: [
        {
          options: getReminderOptions()
        }
      ]
    });
    $s = $(s);
    $sel = $("#reminder-selectors");
    $ul = $sel.find("ul");
    if ($ul.length) {
      $ul.append($s.find("li"));
    } else {
      $sel.append($s);
    }
    $("html").scrollTop($(this).position().top);
    return false;
  };

  onClickReminderRemoveBtn = function() {
    $ = jQuery;
    $(this).parent().remove();
    $("html").scrollTop($("#reminder-add-btn").position().top);
    return false;
  };

  onLoadedOrganization = function(data) {
    var s;
    s = "";
    if (data.shippingAddrStreet) {
      s += data.shippingAddrStreet;
    }
    if (data.shippingAddrPostalCode || data.shippingAddrLocation) {
      if (s !== "") {
        s += ", ";
      }
      if (data.shippingAddrPostalCode) {
        s += data.shippingAddrPostalCode + " ";
      }
      if (data.shippingAddrLocation) {
        s += data.shippingAddrLocation;
      }
    }
    return $("#location").val(s);
  };

  onSelectOrganization = function(value) {
    $ = jQuery;
    return $.getJSON($("#organization").data("get-url"), {
      id: value
    }, onLoadedOrganization);
  };

  onSelectTab = function() {
    var val;
    $ = jQuery;
    val = Number($(this).val());
    $tabs.tabs("select", "tabs-recurrence-type-" + val);
    return $("#recurrence-end").toggle(val !== 0);
  };

  onSubmitForm = function() {
    var recurType, reminders, val, wds;
    $ = jQuery;
    recurType = Number($("#tabs-recurrence-type input:radio:checked").val());
    if (recurType > 0) {
      val = $("#recurrence-interval-" + recurType).val();
      $("#recurrence-interval").val(val || 1);
      $("#recurrence-monthDay").val($("#recurrence-monthDay-" + recurType).val());
      $("#recurrence-weekdayOrd").val($("#recurrence-weekdayOrd-" + recurType).val());
      $("#recurrence-month").val($("#recurrence-month-" + recurType).val());
      if (recurType === 30) {
        wds = [];
        $("#tabs-recurrence-type-30 input:checkbox:checked").each(function() {
          return wds.push(Number($(this).val()));
        });
        wds.sort();
        $("#recurrence-weekdays").val(wds.join(","));
      } else if (recurType === 50) {
        $("#recurrence-weekdays").val($("#recurrence-weekdays-50").val());
      } else if (recurType === 70) {
        $("#recurrence-weekdays").val($("#recurrence-weekdays-70").val());
      }
    }
    reminders = [];
    $("#reminder-selectors select").each(function() {
      return reminders.push($(this).val());
    });
    $("#reminders").val(reminders.join(" "));
    return true;
  };

  $("#organization").autocompleteex({
    select: onSelectOrganization
  });

  $("#allDay").on("change", onChangeAllDay).triggerHandler("change");

  $tabs.tabs().on("change", "input:radio", onSelectTab).on("change", ".ui-tabs-panel", onChangeTabContent);

  $("#recurrence-end").on("change", "dt input:radio", function() {
    var $input;
    $input = enableRecurrenceEndCtrls($(this).val());
    if ($input) {
      return $input.focus();
    }
  });

  enableRecurrenceEndCtrls($("#recurrence-end dt input:radio").val());

  initRecurrenceTypes();

  $("#calendarEvent-form").on("submit", onSubmitForm);

  initReminders();

}).call(this);
